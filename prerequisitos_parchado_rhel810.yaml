---
- name: Validar pre-requisitos de actualización a RHEL 8.10 y guardar output
  hosts: all
  become: true
  vars:
    desired_rhel_version: "8.10"
    output_dir: "/tmp"
    output_filename: "ansible_output_{{ ansible_date_time.year }}_{{ ansible_date_time.month }}_{{ ansible_date_time.day }}_{{ ansible_date_time.hour }}_{{ ansible_date_time.minute }}_{{ ansible_date_time.second }}.txt"

  tasks:
    - name: Verificar versión actual de RHEL
      command: cat /etc/redhat-release
      register: rhel_version
      failed_when: rhel_version.stdout is not search("Red Hat Enterprise Linux release 8")
      tags: check_version

    - name: Mostrar versión actual de RHEL
      debug:
        msg: "Versión actual de RHEL: {{ rhel_version.stdout }}"
      tags: show_version

    - name: Verificar suscripción de RHEL
      command: subscription-manager status
      register: subscription_status
      failed_when: subscription_status.rc != 0
      tags: check_subscription

    - name: Mostrar estado de suscripción
      debug:
        msg: "Estado de suscripción: {{ subscription_status.stdout }}"
      tags: show_subscription

    - name: Verificar parches pendientes
      command: yum check-update --security
      register: pending_patches
      failed_when: pending_patches.rc != 0
      tags: check_patches

    - name: Mostrar parches pendientes
      debug:
        msg: "Parches pendientes: {{ pending_patches.stdout }}"
      tags: show_patches

    - name: Verificar si el sistema está actualizado
      command: yum check-update
      register: update_status
      failed_when: update_status.stdout != ""
      tags: check_update

    - name: Mostrar estado de actualización
      debug:
        msg: "Estado de actualización: {{ update_status.stdout }}"
      tags: show_update

    - name: Verificar versión de RHEL después de actualización
      command: cat /etc/redhat-release
      register: rhel_version_after
      when: update_status.stdout == ""
      tags: check_version_after

    - name: Mostrar versión de RHEL después de actualización
      debug:
        msg: "Versión de RHEL después de actualización: {{ rhel_version_after.stdout }}"
      when: update_status.stdout == ""
      tags: show_version_after

    - name: Verificar si la versión de RHEL es la deseada
      assert:
        that:
          - rhel_version_after.stdout is search("Red Hat Enterprise Linux release {{ desired_rhel_version }}")
        msg: "La versión de RHEL no es la deseada ({{ desired_rhel_version }})"
      when: update_status.stdout == ""
      tags: assert_version

    - name: Guardar output del playbook en el filesystem local
      local_action:
        module: command
        args: "cat"
      with_items:
        - "{{ lookup('template', 'output.j2') }}"
      register: output_result
      run_once: true
      delegate_to: localhost
      tags: save_output

    - name: Crear archivo con output del playbook
      local_action:
        module: copy
        content: "{{ output_result.stdout }}"
        dest: "{{ output_dir }}/{{ output_filename }}"
      run_once: true
      delegate_to: localhost
      tags: create_output_file
